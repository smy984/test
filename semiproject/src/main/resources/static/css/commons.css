@charset "UTF-8";

/* 
    전체 스타일
    - 폭 설정 기준을 테두리(border-box)로 지정
    - 전체 글꼴 설정
*/
*{
    box-sizing: border-box;
    font-family: sans-serif;
}

 /* 
    container는 작은 화면의 외부 영억을 관리하는 도구
    - 폭 조절과 가운데 배치를 할 수 있어야 한다.
    - css에서는 계산식이 모든 브라우저에서 작동하지 않는다.
    - 미리 예상 가능한 크기를 준비해두면 편하게 쓸 수 있다.
*/
.container-300{width:300px; margin: 0 auto;}
.container-350{width:300px; margin: 0 auto;}
.container-400{width:400px; margin: 0 auto;}
.container-450{width:400px; margin: 0 auto;}
.container-500{width:500px; margin: 0 auto;}
.container-550{width:500px; margin: 0 auto;}
.container-600{width:600px; margin: 0 auto;}
.container-650{width:600px; margin: 0 auto;}
.container-700{width:700px; margin: 0 auto;}
.container-750{width:700px; margin: 0 auto;}
.container-800{width:800px; margin: 0 auto;}
.container-850{width:800px; margin: 0 auto;}
.container-900{width:900px; margin: 0 auto;}
.container-950{width:900px; margin: 0 auto;}
.container-1000{width:1000px; margin: 0 auto;}
.container-1050{width:1000px; margin: 0 auto;}
.container-1100{width:1100px; margin: 0 auto;}
.container-1150{width:1100px; margin: 0 auto;}
.container-1200{width:1200px; margin: 0 auto;}

/* 
    row는 container 내부에 배치될 도구들이 위치할 자리에 해당한다.
    - 상하 margin만 부여하여 간격을 띄워준다.
*/
.row{
    margin: 10px 0px;
}

/* 
    row 내부에 위치하는 도구들의 폭을 설정
    - 폭을 row에 맞게 100%로 설정하거나 아니면 자신의 폭을 그대로 사용
    - 아무 표시도 하지 않으면 폭을 있는 그대로 두고 클래스를 부여하면 100%로 변경
*/
.w-100{
    width: 100%;
}

/* 
    어차피 정렬은 left, centet, right밖에 없다.
*/
.left{text-align: left;}
.center{text-align: center;}
.right{text-align: right;}

/* 
    margin은 간격을 벌리기 위해서 사용한다.
    어떨 때는 12px, 어떨 때는 17px과 같이 부여하면 일관성이 떨어진다.
    표준화된 margin 부여가 가능하도록 스타일을 설정
    - mt(margin-top), mb(margin-bottom), ms(margin-start), me(margin-end)
*/
.mt-10{margin-top: 10px;}
.mt-20{margin-top: 20px;}
.mt-30{margin-top: 30px;}
.mt-40{margin-top: 40px;}
.mt-50{margin-top: 50px;}

.mb-10{margin-bottom: 10px;}
.mb-20{margin-bottom: 20px;}
.mb-30{margin-bottom: 30px;}
.mb-40{margin-bottom: 40px;}
.mb-50{margin-bottom: 50px;}

.ms-10{margin-left: 10px;}
.ms-20{margin-left: 20px;}
.ms-30{margin-left: 30px;}
.ms-40{margin-left: 40px;}
.ms-50{margin-left: 50px;}

.me-10{margin-right: 10px;}
.me-20{margin-right: 20px;}
.me-30{margin-right: 30px;}
.me-40{margin-right: 40px;}
.me-50{margin-right: 50px;}

/* 
    버튼은 3가지 역할이 있다고 보고 디자인한다.
    - 긍정버튼 : 현재의 작업을 완성시키는 버튼
    - 중립버튼 : 현재의 작업과 상관없는 다른 작업과 연결된 버튼
    - 부정버튼 : 현재의 작업이 위험함을 알리거나 부정적인 효과를 처리하는 버튼
*/
.btn{
    font-size: 20px;
    padding: 0.75em;
    border: none;
    cursor: pointer;

    /* a 태그를 버튼으로 만들기 위해 추가 */
    display: inline-block;
    text-align: center;
    text-decoration: none;
}
.btn.btn-positive{
    background-color: #2980b9;
    color: white;
}
.btn.btn-positive:hover{
    background-color: #2473a6;
}
.btn.btn-neutral{
    background-color: white;
    color: gray;
    border: 1px solid gray;
}
.btn.btn-neutral:hover{
    border: 1px solid black;
    color: black;
}
.btn.btn-negative{
    background-color: #ecf0f1;
    color: gray;
}
.btn.btn-negative:hover{
    background-color: #d0dadc;
}

/* 
    입력창은 버튼과 같이 등장하므로 비율이나 크기 등이 같아야 한다.
*/
.input{
    outline: none;
    font-size: 20px;
    padding: 0.75em;
    border: 1px solid gray;
}
.input:focus{
    border-color: black;
}

/* 
    input이라는 클래스가 있으면서 input-underline이라는 클래스가 있다면
*/
.input.input-underline{
    border: none;
    border-bottom: 1px solid gray;
}
.input.input-underline:focus{
    border-color: black;
}

/* 
    배경 이미지가 들어가는 입력창
*/
.input.input-icon{
    padding-left: 2.5em;
    /* background-image: url("./image/search.png"); 쓸 때 넣으면 됨*/
    background-size: 1em;
    background-repeat: no-repeat;
    background-position-x: 0.75em;
    background-position-y: center;
}

/* 
    textarea는 기본적으로 폭 조절이 가능하여 디자인에 어려움이 많다.
    - 높이만 조절되게 하든가
    - 아예 조절이 안 되게 하든가
    - resize 속성
*/
textarea.input{/*textarea 중 input class인 것만*/
    resize: vertical;
}
textarea.input.fix-size{/*textarea는 class가 아니니까*/
    resize: none;
}